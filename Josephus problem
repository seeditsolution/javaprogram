/* Josephus problem
Given the total number of persons n and a number k which indicates that k-1 persons are skipped and kth person is killed in circle in a fixed direction.
The task is to choose the safe place in the circle so that when you perform these operations starting from 1st place in the circle, you are the last one remaining and survive. 
Input:
n = 3 k = 2
Output: 3
/*
import java.util.*;
import java.io.*;
import java.lang.*;
class GFG 
{ 
    
    static int jos(int n, int k)
    {
    	if(n == 1)
    		return 0;
    	else
    		return (jos(n - 1, k) + k) % n;
    }

    static int myJos(int n, int k)
    {
    	return jos(n, k) + 1;
    }
      
   
    public static void main(String args[]) 
    { 
        System.out.println(myJos(5, 3));  
    } 
}
